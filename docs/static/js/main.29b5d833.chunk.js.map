{"version":3,"sources":["pull-to-refresh/index.js","commands/commands.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DIRECTION","isScrollable","element","direction","overflowType","getComputedStyle","overflowY","document","scrollingElement","isOverflowScrollable","DOWN","scrollTop","clientHeight","scrollHeight","UP","Error","styleInject","css","ref","insertAt","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","RefreshingContent","React","className","PullingContent","PullToRefresh","_a","_b","isPullable","_c","canFetchMore","onRefresh","onFetchMore","_d","refreshingContent","_e","pullingContent","children","_f","pullDownThreshold","_g","fetchMoreThreshold","_h","maxPullDownDistance","backgroundColor","_j","containerRef","useRef","childrenRef","pullDownRef","fetchMoreRef","pullToRefreshThresholdBreached","fetchMoreTresholdBreached","isDragging","startY","currentY","useEffect","current","addEventListener","onTouchStart","passive","onTouchMove","onScroll","onEnd","body","removeEventListener","initContainer","getScrollToBottomValue","classList","add","remove","window","innerHeight","requestAnimationFrame","overflowX","transform","opacity","e","MouseEvent","pageY","TouchEvent","touches","isTreeScrollable","parentElement","target","getBoundingClientRect","top","toString","overflow","visibility","Commands","setCanFetchMore","setIsPullable","setFetchMoreThreshold","setPullDownThreshold","setMaxPullDownDistance","onReset","display","flexDirection","onClick","id","checked","onChange","htmlFor","value","DEFAULT_VALUES","App","FAKE_LIST","useState","list","setList","getNewData","setTimeout","n","map","item","index","key","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29b5d833.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useRef, useEffect } from 'react';\n\nvar DIRECTION;\r\n(function (DIRECTION) {\r\n    DIRECTION[DIRECTION[\"UP\"] = -1] = \"UP\";\r\n    DIRECTION[DIRECTION[\"DOWN\"] = 1] = \"DOWN\";\r\n})(DIRECTION || (DIRECTION = {}));\n\nfunction isOverflowScrollable(element) {\r\n    var overflowType = getComputedStyle(element).overflowY;\r\n    if (element === document.scrollingElement && overflowType === 'visible') {\r\n        return true;\r\n    }\r\n    if (overflowType !== 'scroll' && overflowType !== 'auto') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isScrollable(element, direction) {\r\n    if (!isOverflowScrollable(element)) {\r\n        return false;\r\n    }\r\n    if (direction === DIRECTION.DOWN) {\r\n        var bottomScroll = element.scrollTop + element.clientHeight;\r\n        return bottomScroll < element.scrollHeight;\r\n    }\r\n    if (direction === DIRECTION.UP) {\r\n        return element.scrollTop > 0;\r\n    }\r\n    throw new Error('unsupported direction');\r\n}\r\n/**\r\n * Returns whether a given element or any of its ancestors (up to rootElement) is scrollable in a given direction.\r\n */\r\nfunction isTreeScrollable(element, direction) {\r\n    if (isScrollable(element, direction)) {\r\n        return true;\r\n    }\r\n    if (element.parentElement == null) {\r\n        return false;\r\n    }\r\n    return isTreeScrollable(element.parentElement, direction);\r\n}\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".lds-ellipsis {\\n  display: inline-block;\\n  position: relative;\\n  width: 64px;\\n  height: 64px; }\\n\\n.lds-ellipsis div {\\n  position: absolute;\\n  top: 27px;\\n  width: 11px;\\n  height: 11px;\\n  border-radius: 50%;\\n  background: #363636;\\n  animation-timing-function: cubic-bezier(0, 1, 1, 0); }\\n\\n.lds-ellipsis div:nth-child(1) {\\n  left: 6px;\\n  animation: lds-ellipsis1 0.6s infinite; }\\n\\n.lds-ellipsis div:nth-child(2) {\\n  left: 6px;\\n  animation: lds-ellipsis2 0.6s infinite; }\\n\\n.lds-ellipsis div:nth-child(3) {\\n  left: 26px;\\n  animation: lds-ellipsis2 0.6s infinite; }\\n\\n.lds-ellipsis div:nth-child(4) {\\n  left: 45px;\\n  animation: lds-ellipsis3 0.6s infinite; }\\n\\n@keyframes lds-ellipsis1 {\\n  0% {\\n    transform: scale(0); }\\n  100% {\\n    transform: scale(1); } }\\n\\n@keyframes lds-ellipsis3 {\\n  0% {\\n    transform: scale(1); }\\n  100% {\\n    transform: scale(0); } }\\n\\n@keyframes lds-ellipsis2 {\\n  0% {\\n    transform: translate(0, 0); }\\n  100% {\\n    transform: translate(19px, 0); } }\\n\";\nstyleInject(css);\n\n// Source: https://loading.io/css/\r\nvar RefreshingContent = function () {\r\n    return (React.createElement(\"div\", { className: \"lds-ellipsis\" },\r\n        React.createElement(\"div\", null),\r\n        React.createElement(\"div\", null),\r\n        React.createElement(\"div\", null),\r\n        React.createElement(\"div\", null)));\r\n};\n\nvar PullingContent = function () {\r\n    return (React.createElement(\"div\", null,\r\n        React.createElement(\"p\", null, \"\\u21A7\\u00A0\\u00A0pull to refresh\\u00A0\\u00A0\\u21A7\")));\r\n};\n\nvar css$1 = \".ptr,\\n.ptr__children {\\n  height: 100%;\\n  width: 100%;\\n  overflow: hidden;\\n  -webkit-overflow-scrolling: touch;\\n  position: relative;\\n  z-index: 1; }\\n\\n.ptr.ptr--fetch-more-treshold-breached .ptr__fetch-more {\\n  display: block; }\\n\\n.ptr__fetch-more {\\n  display: none; }\\n\\n/**\\n  * Pull down transition \\n  */\\n.ptr__children,\\n.ptr__pull-down {\\n  transition: transform 0.2s cubic-bezier(0, 0, 0.31, 1); }\\n\\n.ptr__pull-down {\\n  position: absolute;\\n  overflow: hidden;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  visibility: hidden; }\\n  .ptr__pull-down > div {\\n    display: none; }\\n\\n.ptr--dragging {\\n  /**\\n    * Hide PullMore content is treshold breached\\n    */\\n  /**\\n    * Otherwize, display content\\n    */ }\\n  .ptr--dragging.ptr--pull-down-treshold-breached .ptr__pull-down--pull-more {\\n    display: none; }\\n  .ptr--dragging .ptr__pull-down--pull-more {\\n    display: block; }\\n\\n.ptr--pull-down-treshold-breached {\\n  /**\\n    * Force opacity to 1 is pull down trashold breached\\n    */\\n  /**\\n    * And display loader\\n    */ }\\n  .ptr--pull-down-treshold-breached .ptr__pull-down {\\n    opacity: 1 !important; }\\n  .ptr--pull-down-treshold-breached .ptr__pull-down--loading {\\n    display: block; }\\n\\n.ptr__loader {\\n  margin: 0 auto;\\n  text-align: center; }\\n\";\nstyleInject(css$1);\n\nvar PullToRefresh = function (_a) {\r\n    var _b = _a.isPullable, isPullable = _b === void 0 ? true : _b, _c = _a.canFetchMore, canFetchMore = _c === void 0 ? false : _c, onRefresh = _a.onRefresh, onFetchMore = _a.onFetchMore, _d = _a.refreshingContent, refreshingContent = _d === void 0 ? React.createElement(RefreshingContent, null) : _d, _e = _a.pullingContent, pullingContent = _e === void 0 ? React.createElement(PullingContent, null) : _e, children = _a.children, _f = _a.pullDownThreshold, pullDownThreshold = _f === void 0 ? 67 : _f, _g = _a.fetchMoreThreshold, fetchMoreThreshold = _g === void 0 ? 100 : _g, _h = _a.maxPullDownDistance, maxPullDownDistance = _h === void 0 ? 95 : _h, // max distance to scroll to trigger refresh\r\n    backgroundColor = _a.backgroundColor, _j = _a.className, className = _j === void 0 ? '' : _j;\r\n    var containerRef = useRef(null);\r\n    var childrenRef = useRef(null);\r\n    var pullDownRef = useRef(null);\r\n    var fetchMoreRef = useRef(null);\r\n    var pullToRefreshThresholdBreached = false;\r\n    var fetchMoreTresholdBreached = false; // if true, fetchMore loader is displayed\r\n    var isDragging = false;\r\n    var startY = 0;\r\n    var currentY = 0;\r\n    useEffect(function () {\r\n        if (!isPullable || !childrenRef || !childrenRef.current)\r\n            return;\r\n        childrenRef.current.addEventListener('touchstart', onTouchStart, { passive: true });\r\n        childrenRef.current.addEventListener('mousedown', onTouchStart);\r\n        childrenRef.current.addEventListener('touchmove', onTouchMove, { passive: false });\r\n        childrenRef.current.addEventListener('mousemove', onTouchMove);\r\n        childrenRef.current.addEventListener('scroll', onScroll);\r\n        childrenRef.current.addEventListener('touchend', onEnd);\r\n        childrenRef.current.addEventListener('mouseup', onEnd);\r\n        document.body.addEventListener('mouseleave', onEnd);\r\n        return function () {\r\n            if (!isPullable || !childrenRef || !childrenRef.current)\r\n                return;\r\n            childrenRef.current.removeEventListener('touchstart', onTouchStart);\r\n            childrenRef.current.removeEventListener('mousedown', onTouchStart);\r\n            childrenRef.current.removeEventListener('touchmove', onTouchMove);\r\n            childrenRef.current.removeEventListener('mousemove', onTouchMove);\r\n            childrenRef.current.removeEventListener('scroll', onScroll);\r\n            childrenRef.current.removeEventListener('touchend', onEnd);\r\n            childrenRef.current.removeEventListener('mouseup', onEnd);\r\n            document.body.removeEventListener('mouseleave', onEnd);\r\n        };\r\n    }, [\r\n        children,\r\n        isPullable,\r\n        onRefresh,\r\n        pullDownThreshold,\r\n        maxPullDownDistance,\r\n        canFetchMore,\r\n        fetchMoreThreshold,\r\n    ]);\r\n    /**\r\n     * Set PTR to initial state when children prop is updated\r\n     */\r\n    useEffect(function () {\r\n        initContainer();\r\n    }, [children]);\r\n    /**\r\n     * Check onMount / canFetchMore becomes true\r\n     *  if fetchMoreThreshold is already breached\r\n     */\r\n    useEffect(function () {\r\n        if (canFetchMore && getScrollToBottomValue() < fetchMoreThreshold && onFetchMore) {\r\n            if (containerRef && containerRef.current) {\r\n                containerRef.current.classList.add('ptr--fetch-more-treshold-breached');\r\n            }\r\n            fetchMoreTresholdBreached = true;\r\n            onFetchMore();\r\n        }\r\n        else {\r\n            fetchMoreTresholdBreached = false;\r\n            containerRef.current.classList.remove('ptr--fetch-more-treshold-breached');\r\n        }\r\n    }, [canFetchMore, children]);\r\n    /**\r\n     * Returns distance to bottom of the container\r\n     */\r\n    var getScrollToBottomValue = function () {\r\n        if (!childrenRef || !childrenRef.current)\r\n            return -1;\r\n        var scrollTop = childrenRef.current.scrollTop; // is the pixels hidden in top due to the scroll. With no scroll its value is 0.\r\n        var scrollHeight = childrenRef.current.scrollHeight; // is the pixels of the whole container\r\n        return scrollHeight - scrollTop - window.innerHeight;\r\n    };\r\n    var initContainer = function () {\r\n        requestAnimationFrame(function () {\r\n            /**\r\n             * Reset Styles\r\n             */\r\n            if (childrenRef.current) {\r\n                childrenRef.current.style.overflowX = 'hidden';\r\n                childrenRef.current.style.overflowY = 'auto';\r\n                childrenRef.current.style.transform = \"translate(0px, 0px)\";\r\n            }\r\n            if (pullDownRef.current) {\r\n                pullDownRef.current.style.opacity = '0';\r\n            }\r\n            if (containerRef.current) {\r\n                containerRef.current.classList.remove('ptr--pull-down-treshold-breached');\r\n                containerRef.current.classList.remove('ptr--dragging');\r\n            }\r\n        });\r\n    };\r\n    var onTouchStart = function (e) {\r\n        isDragging = false;\r\n        if (e instanceof MouseEvent) {\r\n            startY = e.pageY;\r\n        }\r\n        if (e instanceof TouchEvent) {\r\n            startY = e.touches[0].pageY;\r\n        }\r\n        currentY = startY;\r\n        // Check if element can be scrolled\r\n        if (e.type === 'touchstart' && isTreeScrollable(e.target, DIRECTION.UP)) {\r\n            return;\r\n        }\r\n        // Top non visible so cancel\r\n        if (childrenRef.current.getBoundingClientRect().top < 0) {\r\n            return;\r\n        }\r\n        isDragging = true;\r\n    };\r\n    var onTouchMove = function (e) {\r\n        if (!isDragging) {\r\n            return;\r\n        }\r\n        if (e instanceof TouchEvent) {\r\n            currentY = e.touches[0].pageY;\r\n        }\r\n        else {\r\n            currentY = e.pageY;\r\n        }\r\n        containerRef.current.classList.add('ptr--dragging');\r\n        if (currentY < startY) {\r\n            isDragging = false;\r\n            return;\r\n        }\r\n        // Limit to trigger refresh has been breached\r\n        if (currentY - startY >= pullDownThreshold) {\r\n            isDragging = true;\r\n            pullToRefreshThresholdBreached = true;\r\n            containerRef.current.classList.remove('ptr--dragging');\r\n            containerRef.current.classList.add('ptr--pull-down-treshold-breached');\r\n        }\r\n        else {\r\n            pullToRefreshThresholdBreached = false;\r\n            containerRef.current.classList.remove('ptr--pull-down-treshold-breached');\r\n        }\r\n        // maxPullDownDistance breached, stop the animation\r\n        if (currentY - startY > maxPullDownDistance) {\r\n            return;\r\n        }\r\n        pullDownRef.current.style.opacity = ((currentY - startY) / 65).toString();\r\n        childrenRef.current.style.overflow = 'visible';\r\n        childrenRef.current.style.transform = \"translate(0px, \" + (currentY - startY) + \"px)\";\r\n        pullDownRef.current.style.visibility = 'visible';\r\n    };\r\n    var onScroll = function (e) {\r\n        /**\r\n         * Check if component has already called onFetchMore\r\n         */\r\n        if (fetchMoreTresholdBreached)\r\n            return;\r\n        /**\r\n         * Check if user breached fetchMoreThreshold\r\n         */\r\n        if (canFetchMore && getScrollToBottomValue() < fetchMoreThreshold && onFetchMore) {\r\n            fetchMoreTresholdBreached = true;\r\n            containerRef.current.classList.add('ptr--fetch-more-treshold-breached');\r\n            onFetchMore();\r\n        }\r\n        else {\r\n            containerRef.current.classList.remove('ptr--fetch-more-treshold-breached');\r\n        }\r\n    };\r\n    var onEnd = function () {\r\n        isDragging = false;\r\n        startY = 0;\r\n        currentY = 0;\r\n        // Container has not been dragged enough, put it back to it's initial state\r\n        if (!pullToRefreshThresholdBreached) {\r\n            pullDownRef.current.style.visibility = 'hidden';\r\n            initContainer();\r\n            return;\r\n        }\r\n        childrenRef.current.style.overflow = 'visible';\r\n        childrenRef.current.style.transform = \"translate(0px, \" + pullDownThreshold + \"px)\";\r\n        pullToRefreshThresholdBreached = false;\r\n        onRefresh();\r\n    };\r\n    return (React.createElement(\"div\", { className: \"ptr \" + className, style: { backgroundColor: backgroundColor }, ref: containerRef },\r\n        React.createElement(\"div\", { className: \"ptr__pull-down\", ref: pullDownRef },\r\n            React.createElement(\"div\", { className: \"ptr__loader ptr__pull-down--loading\" }, refreshingContent),\r\n            React.createElement(\"div\", { className: \"ptr__pull-down--pull-more\" }, pullingContent)),\r\n        React.createElement(\"div\", { className: \"ptr__children\", ref: childrenRef },\r\n            children,\r\n            React.createElement(\"div\", { className: \"ptr__fetch-more\", ref: fetchMoreRef },\r\n                React.createElement(\"div\", { className: \"ptr__loader ptr__fetch-more--loading\" }, refreshingContent)))));\r\n};\n\nexport default PullToRefresh;\n","import React from 'react';\nimport './commands.css';\n\ninterface Props {\n  canFetchMore: boolean;\n  isPullable: boolean;\n  fetchMoreThreshold: number;\n  pullDownThreshold: number;\n  maxPullDownDistance: number;\n  setCanFetchMore: Function;\n  setIsPullable: Function;\n  setFetchMoreThreshold: Function;\n  setPullDownThreshold: Function;\n  setMaxPullDownDistance: Function;\n  onReset: Function;\n}\n\nconst Commands = ({\n  canFetchMore,\n  isPullable,\n  setCanFetchMore,\n  setIsPullable,\n  setFetchMoreThreshold,\n  fetchMoreThreshold,\n  setPullDownThreshold,\n  pullDownThreshold,\n  setMaxPullDownDistance,\n  maxPullDownDistance,\n  onReset,\n}: Props) => {\n  return (\n    <div className=\"commands\">\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div className=\"command__group\">\n          <button onClick={() => onReset()}>\n            <code>Reset values</code>\n          </button>\n        </div>\n        <div className=\"command__group\">\n          <input type=\"checkbox\" id=\"ptr\" checked={isPullable} onChange={() => setIsPullable()} />\n          <label htmlFor=\"ptr\">\n            <code>isPullable</code>\n          </label>\n        </div>\n        <div className=\"command__group\">\n          <input type=\"checkbox\" id=\"fetchMore\" checked={canFetchMore} onChange={() => setCanFetchMore()} />\n          <label htmlFor=\"fetchMore\">\n            <code>canFetchMore</code>\n          </label>\n        </div>\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div className=\"command__group\">\n          <input\n            type=\"number\"\n            id=\"fetchMoreTreshold\"\n            value={fetchMoreThreshold}\n            onChange={e => setFetchMoreThreshold(e.target.value)}\n          />\n          <label htmlFor=\"fetchMoreTreshold\">\n            <code>fetchMoreTreshold</code>\n          </label>\n        </div>\n        <div className=\"command__group\">\n          <input\n            type=\"number\"\n            id=\"pullDownThreshold\"\n            value={pullDownThreshold}\n            onChange={e => setPullDownThreshold(e.target.value)}\n          />\n          <label htmlFor=\"pullDownThreshold\">\n            <code>pullDownThreshold</code>\n          </label>\n        </div>\n        <div className=\"command__group\">\n          <input\n            type=\"number\"\n            id=\"maxPullDownDistance\"\n            value={maxPullDownDistance}\n            onChange={e => setMaxPullDownDistance(e.target.value)}\n          />\n          <label htmlFor=\"maxPullDownDistance\">\n            <code>maxPullDownDistance</code>\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Commands;\n","import React, { useState } from 'react';\nimport './App.css';\nimport PullToRefresh from './pull-to-refresh';\nimport Commands from './commands/commands';\n\nconst DEFAULT_VALUES = {\n  isPullable: true,\n  canFetchMore: false,\n  fetchMoreThreshold: 100,\n  pullDownThreshold: 67,\n  maxPullDownDistance: 95,\n};\n\nconst App: React.FC = () => {\n  // prettier-ignore\n  const FAKE_LIST = ['foo','bar','baz','foo','foo','bar','baz','foo','foo','bar','baz','foo','foo','bar','baz','foo'];\n  const [list, setList] = useState<string[]>(FAKE_LIST);\n  const [isPullable, setIsPullable] = useState<boolean>(DEFAULT_VALUES.isPullable);\n  const [canFetchMore, setCanFetchMore] = useState<boolean>(DEFAULT_VALUES.canFetchMore);\n  const [fetchMoreThreshold, setFetchMoreThreshold] = useState<number>(DEFAULT_VALUES.fetchMoreThreshold);\n  const [pullDownThreshold, setPullDownThreshold] = useState<number>(DEFAULT_VALUES.pullDownThreshold);\n  const [maxPullDownDistance, setMaxPullDownDistance] = useState<number>(DEFAULT_VALUES.maxPullDownDistance);\n\n  const handleReset = (): void => {\n    setIsPullable(DEFAULT_VALUES.isPullable);\n    setCanFetchMore(DEFAULT_VALUES.canFetchMore);\n    setFetchMoreThreshold(DEFAULT_VALUES.fetchMoreThreshold);\n    setPullDownThreshold(DEFAULT_VALUES.pullDownThreshold);\n    setMaxPullDownDistance(DEFAULT_VALUES.maxPullDownDistance);\n  };\n\n  const getNewData = (): void => {\n    setTimeout(() => {\n      setList([...list, ...FAKE_LIST]);\n    }, 1500);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-commands\">\n        <Commands\n          canFetchMore={canFetchMore}\n          setCanFetchMore={() => setCanFetchMore(!canFetchMore)}\n          isPullable={isPullable}\n          setIsPullable={() => setIsPullable(!isPullable)}\n          fetchMoreThreshold={fetchMoreThreshold}\n          setFetchMoreThreshold={(n: number) => setFetchMoreThreshold(n)}\n          pullDownThreshold={pullDownThreshold}\n          setPullDownThreshold={(n: number) => setPullDownThreshold(n)}\n          maxPullDownDistance={maxPullDownDistance}\n          setMaxPullDownDistance={(n: number) => setMaxPullDownDistance(n)}\n          onReset={handleReset}\n        />\n      </div>\n      <div className=\"App-ptr\">\n        <PullToRefresh\n          onRefresh={getNewData}\n          canFetchMore={canFetchMore}\n          isPullable={isPullable}\n          onFetchMore={getNewData}\n          fetchMoreThreshold={fetchMoreThreshold}\n          pullDownThreshold={pullDownThreshold}\n          maxPullDownDistance={maxPullDownDistance}\n        >\n          <>\n            <header className=\"App-header\">\n              <h1>Demo App</h1>\n              <h2>Pull To Refresh</h2>\n            </header>\n            <div className=\"App-container\">\n              <ul>\n                {list.map((item: string, index: number) => (\n                  <li key={index}>\n                    {index} - {item}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </>\n        </PullToRefresh>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}